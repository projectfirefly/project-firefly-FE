import React from "react";
import uifx from "uifx";

//importing the sound
import clickMP3 from "../../../assets/sounds/switch.mp3";
//making sound variables 
const click = new uifx({ asset: clickMP3});

const PaletteIcon = ({ fill, hasBeenClicked }) => {
  //click.play() <== have a bug when dragging the color palette
  function hslToHex(h, s, l) {
    h /= 360;
    s /= 100;
    l /= 100;
    let r, g, b;
    if (s === 0) {
      r = g = b = l; // achromatic
    } else {
      const hue2rgb = (p, q, t) => {
        if (t < 0) t += 1;
        if (t > 1) t -= 1;
        if (t < 1 / 6) return p + (q - p) * 6 * t;
        if (t < 1 / 2) return q;
        if (t < 2 / 3) return p + (q - p) * (2 / 3 - t) * 6;
        return p;
      };
      const q = l < 0.5 ? l * (1 + s) : l + s - l * s;
      const p = 2 * l - q;
      r = hue2rgb(p, q, h + 1 / 3);
      g = hue2rgb(p, q, h);
      b = hue2rgb(p, q, h - 1 / 3);
    }
    const toHex = x => {
      const hex = Math.round(x * 255).toString(16);
      return hex.length === 1 ? "0" + hex : hex;
    };
    return `#${toHex(r)}${toHex(g)}${toHex(b)}`;
  }

  return (
    <svg width="35px" height="35px" viewBox="0 0 35 35" version="1.1">
      <g
        id="Style-Guide"
        stroke="none"
        strokeWidth="1"
        fill="none"
        fillRule="evenodd"
      >
        <g
          id="CodingBlocks"
          transform="translate(-690.000000, -886.000000)"
          fill={!hasBeenClicked ? "#ffffff" : hslToHex(fill, 90, 50)}
          fillRule="nonzero"
        >
          <g id="palette-solid" transform="translate(690.000000, 886.000000)">
            <path
              d="M13.9658203,0.41015625 C7.17089844,1.73632813 1.6953125,7.19824219 0.35546875,13.9726563 C-2.17382813,26.7558594 9.35839844,36.2851562 18.046875,34.9384766 C20.8632812,34.5009766 22.2441406,31.2060547 20.9521484,28.6699219 C19.3730469,25.5664063 21.6289063,21.9433594 25.1152344,21.9433594 L30.5634766,21.9433594 C33.0107422,21.9433594 34.9931641,19.9199219 35,17.4794922 C34.9658203,6.70605469 25.1630859,-1.77050781 13.9658203,0.41015625 Z M6.5625,21.9433594 C5.35253906,21.9433594 4.375,20.9658203 4.375,19.7558594 C4.375,18.5458984 5.35253906,17.5683594 6.5625,17.5683594 C7.77246094,17.5683594 8.75,18.5458984 8.75,19.7558594 C8.75,20.9658203 7.77246094,21.9433594 6.5625,21.9433594 Z M8.75,13.1933594 C7.54003906,13.1933594 6.5625,12.2158203 6.5625,11.0058594 C6.5625,9.79589844 7.54003906,8.81835938 8.75,8.81835938 C9.95996094,8.81835938 10.9375,9.79589844 10.9375,11.0058594 C10.9375,12.2158203 9.95996094,13.1933594 8.75,13.1933594 Z M17.5,8.81835938 C16.2900391,8.81835938 15.3125,7.84082031 15.3125,6.63085938 C15.3125,5.42089844 16.2900391,4.44335938 17.5,4.44335938 C18.7099609,4.44335938 19.6875,5.42089844 19.6875,6.63085938 C19.6875,7.84082031 18.7099609,8.81835938 17.5,8.81835938 Z M26.25,13.1933594 C25.0400391,13.1933594 24.0625,12.2158203 24.0625,11.0058594 C24.0625,9.79589844 25.0400391,8.81835938 26.25,8.81835938 C27.4599609,8.81835938 28.4375,9.79589844 28.4375,11.0058594 C28.4375,12.2158203 27.4599609,13.1933594 26.25,13.1933594 Z"
              id="Shape"
            />
          </g>
        </g>
      </g>
    </svg>
  );
};

export default PaletteIcon;
